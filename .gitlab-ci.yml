stages:
  - test
  - analyze
coverage_tests:
  stage: test
  image: node:latest
  script:
    - cd Client
    - npm install
    - npm run coverage:unit
  artifacts:
    paths:
  #Since we have to run server tests locally, here are the commands
  #Cd Server
  #python -m coverage run -m pytest
  #python -m coverage xml

  #python -m coverage xml
      - Client/test-results.xml
      - Client/coverage
      - Server/coverage.xml
      - Server/coverage.lcov
    expire_in: 1 week
  
sonarqube-check:
  stage: analyze
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'